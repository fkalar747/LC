


가상화 
	
	노드 설계
		
		"사과는 빨갛다" : ["사과"]-["%s는 빨갛다"]
		

언어는 순전히 기능적이다. 
	
	자연적인 현상은 그 인과관계 및 연관관계를 학습함으로써 내 효용을 늘릴 수 있다. 
	
	언어는 그 인과관계를 학습하는 것의 필요성이 없다. (어떠한 단어가 등장했다고 해서 다른 어떤 단어가 등장할 가능성을 학습할 필요가 없다)
		
	특정 인풋셋에 특정 언어를 붙여야할 이유는 없다 (의성어 의태어 등도 굳이 필요는 없다) 다만 어떠한 언어를 붙이고 나면 그것이 일종의 프레임웍이 된다.	


범용과 협용 지식 
	
	하나의 프로그램은 결국 회로로 나타낼 수 있다. 특정 조건이 만족되면 전기신호가 갈 것이고 
	
	
	협용 지식 : 어떤 사람이 꿀단지를 어디에 놨는지를 아는 것이다. 
			
			어떤 사람이 어떤 다른 사람에게 꿀단지를 전달하기 위해서 중요한 것은 꿀단지를 어디다 놓느냐가 아니라 어디에 놓든 그 위치를 그 다른 사람이 아는 것이다.
			
			사용자가 어떠한 기계 혹은 프로그램이 어떠한 방식으로 태스크를 처리하고 어떠한 형식으로 결과물을 내놓는지를 아는 것이 중요하지, 그 기계야 어떻게 처리하든 상관이 없다. 

			더 구체적 예
				
				협용 지식은 네트워크 드라이브 설정해서 내컴퓨터 창에서 바로 공유폴더 쓸 수 있게 만든 기능을 쓰고 안쓰고의 차이를 만든다 
				
	범용지식
			
			

		
프루닝을 어떻게 할 것인가

	
	
	

	
